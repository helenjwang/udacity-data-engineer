import cassandra

/* Create a connection to the database */

from cassandra.cluster import Cluster
try: 
    cluster = Cluster(['127.0.0.1']) /*If you have a locally installed Apache Cassandra instance */
    session = cluster.connect()
except Exception as e:
    print(e)

/* Create a keyspace to do the work in */
try:
    session.execute("""
    CREATE KEYSPACE IF NOT EXISTS helenedu 
    WITH REPLICATION = 
    { 'class' : 'SimpleStrategy', 'replication_factor' : 1 }"""
)

except Exception as e:
    print(e)

/* Connect to the Keyspace */
try:
    session.set_keyspace('helenedu')
except Exception as e:
    print(e)

/* Create a Song Library that contains a list of songs, including the song name, artist name, year, album it was from, and if it was a single */
query = "CREATE TABLE IF NOT EXISTS helenmusic "
query = query + "(song_title text, artist_name text, year int, album_name text, single text, PRIMARY KEY (year, artist_name))"
try:
    session.execute(query)
except Exception as e:
    print(e)

/* insert */
query = "INSERT INTO helenmusic (song_title, artist_name, year, single, album_name)" 
query = query + " VALUES (%s, %s, %s, %s, %s)"

try:
    session.execute(query, ("Across The Universe", "The Beatles", 1970, "False", "Let It Be"

))
except Exception as e:
    print(e)
    
try:
    session.execute(query, ("Think For Yourself","The Beatles", 1965,"False",  "Rubber Soul"))
except Exception as e:
    print(e)

/* Validate your data was inserted into the table */
query = 'SELECT * FROM helenmusic'
try:
    rows = session.execute(query)
except Exception as e:
    print(e)
    
for row in rows:
    print (row.year, row.album_name, row.artist_name)

/* Validate the Data Model with the original query. */
query = "select * from helenmusic WHERE YEAR=1970 AND artist_name= 'The Beatles' "
try:
    rows = session.execute(query)
except Exception as e:
    print(e)
    
for row in rows:
    print (row.year, row.album_name, row.artist_name)

/* close the session and cluster connection */
session.shutdown()
cluster.shutdown()
